#include "crow.h"
#include "requests.hpp"
#include "algorithms.hpp"

void setup_routes(crow::SimpleApp& app) {
    CROW_ROUTE(app, "/")([](){
        return "Hello world";
    });

    CROW_ROUTE(app, "/map-match/osrm/<string>")([](const std::string& points){
        return map_match(points);
    });

    CROW_ROUTE(app, "/route/osrm/<string>")([](const std::string& points){
        return route(points);
    });

    CROW_ROUTE(app, "/map-match/valhalla/<string>")([](const std::string& points){
        return map_match_valhalla(points);
    });

    CROW_ROUTE(app, "/route/valhalla/<string>")([](const crow::request& req, const std::string& points){
        const char* excludePolygonsPtr = req.url_params.get("exclude_polygons");
        std::string excludePolygons = excludePolygonsPtr ? excludePolygonsPtr : "";
        
        return route_valhalla(points, excludePolygons);
    });

    CROW_ROUTE(app, "/bus-route/<string>/<string>")([](const crow::request& req, const std::string& routeID, const std::string& directionID){
        const char* excludePolygonsPtr = req.url_params.get("exclude_polygons");
        std::string excludePolygons = excludePolygonsPtr ? excludePolygonsPtr : "";
        
        return bus_route(routeID, directionID, excludePolygons);
    });
}

int main()
{
    //std::string test = convert_coordinates_to_GeoJSON_feature("-8.611,41.149;-8.610,41.149;-8.610,41.148;-8.611,41.148;-8.611,41.149", "LineString", false);
    //std::string test = convert_coordinates_to_GeoJSON_feature("[-8.598169,41.167126],[-8.598199,41.167062],[-8.598105,41.167032],[-8.597293,41.166804],[-8.597429,41.166511]", "Polygon", true);
    //std::string test = get_exclude_polygons_geoJSON("[-8.611,41.149;-8.610,41.149;-8.610,41.148;-8.611,41.148;-8.611,41.149]");
    //std::string test = convert_completeGeoJSON_to_simpleGeoJSON("coordinates:[[-8.601007,41.183045],[-8.600504,41.182915],[-8.600426,41.182895],[-8.600381,41.182883],[-8.600306,41.182861],[-8.600253,41.182846],[-8.599013,41.182512],[-8.597492,41.182105],[-8.597254,41.182043],[-8.597177,41.182177],[-8.597084,41.182294],[-8.597267,41.182346],[-8.597376,41.182382],[-8.597708,41.182470],[-8.598063,41.182558],[-8.598982,41.182808],[-8.599344,41.182904],[-8.599781,41.183020],[-8.600201,41.183133],[-8.600262,41.183149],[-8.601112,41.183378],[-8.601425,41.183454],[-8.602567,41.183704],[-8.602649,41.183724],[-8.603126,41.183834],[-8.603485,41.183915],[-8.603578,41.183938],[-8.603624,41.183950],[-8.604891,41.184223],[-8.604953,41.184240],[-8.605292,41.184327],[-8.606646,41.184632],[-8.606904,41.184681],[-8.607192,41.184716],[-8.607392,41.184740],[-8.607854,41.184765],[-8.607975,41.184760],[-8.608267,41.184750],[-8.608555,41.184728],[-8.609046,41.184676],[-8.609566,41.184573],[-8.609735,41.184537],[-8.609775,41.184527],[-8.609923,41.184488],[-8.610129,41.184424],[-8.610336,41.184350],[-8.610888,41.184168],[-8.611818,41.183787],[-8.612095,41.183671],[-8.612454,41.183532],[-8.612658,41.183457],[-8.612952,41.183384],[-8.613243,41.183352],[-8.613448,41.183329],[-8.613640,41.183310],[-8.617283,41.182914],[-8.617503,41.182871],[-8.617751,41.182741],[-8.618578,41.182240],[-8.619307,41.181784],[-8.619991,41.181409],[-8.620392,41.181218],[-8.620546,41.181154],[-8.621228,41.180871],[-8.621902,41.180661],[-8.622272,41.180543],[-8.622537,41.180461],[-8.622899,41.180361],[-8.623391,41.180248],[-8.623556,41.180171],[-8.623793,41.180129],[-8.623897,41.180076],[-8.623931,41.180039],[-8.623985,41.179980],[-8.623983,41.179920],[-8.623949,41.179816],[-8.623354,41.179292],[-8.622753,41.178751],[-8.622633,41.178594],[-8.622559,41.178414],[-8.622530,41.178161],[-8.622507,41.177901],[-8.622532,41.177266],[-8.622570,41.176201],[-8.622590,41.175563],[-8.622685,41.175148],[-8.622803,41.174916],[-8.622988,41.174738],[-8.623234,41.174609],[-8.623403,41.174531],[-8.623719,41.174332],[-8.623861,41.174191],[-8.623973,41.173982],[-8.624068,41.173749],[-8.624126,41.173662],[-8.624184,41.173575],[-8.624324,41.173464],[-8.624507,41.173371],[-8.624821,41.173306],[-8.625376,41.173244],[-8.625485,41.173177],[-8.626012,41.173110],[-8.626384,41.173085],[-8.626762,41.173042],[-8.627073,41.173009],[-8.627571,41.172949],[-8.628169,41.172859],[-8.628590,41.172778],[-8.629232,41.172639],[-8.631804,41.172107],[-8.634184,41.171604],[-8.634910,41.171450],[-8.635382,41.171335],[-8.636107,41.171126],[-8.636441,41.171005],[-8.636841,41.170861],[-8.637220,41.170681],[-8.637659,41.170455],[-8.638332,41.170043],[-8.639191,41.169422],[-8.639646,41.169093],[-8.640066,41.168787],[-8.640961,41.168148],[-8.641890,41.167474],[-8.642434,41.167080],[-8.643126,41.166594],[-8.643836,41.166178],[-8.643920,41.166134],[-8.644098,41.166039],[-8.644835,41.165676],[-8.645719,41.165296],[-8.646027,41.165162],[-8.646422,41.164992],[-8.647174,41.164660],[-8.647589,41.164447],[-8.647910,41.164361],[-8.648009,41.164352],[-8.648122,41.164357],[-8.648238,41.164392],[-8.648290,41.164421],[-8.648474,41.164494],[-8.648704,41.164583],[-8.648801,41.164596],[-8.648900,41.164585],[-8.648970,41.164569],[-8.649026,41.164543],[-8.649167,41.164413],[-8.649215,41.164249],[-8.649274,41.164048],[-8.649286,41.164010],[-8.649349,41.163809],[-8.649360,41.163775],[-8.649395,41.163657],[-8.649429,41.163540],[-8.649475,41.163338],[-8.649490,41.163268],[-8.649545,41.163095],[-8.649556,41.163061],[-8.649617,41.162865],[-8.649690,41.162635],[-8.649747,41.162454],[-8.649777,41.162352],[-8.649914,41.161883],[-8.649955,41.161735],[-8.649961,41.161714],[-8.649969,41.161690],[-8.649995,41.161597],[-8.650011,41.161549],[-8.650029,41.161486],[-8.650447,41.161546],[-8.650562,41.161563],[-8.650869,41.161618],[-8.651045,41.161647],[-8.651210,41.161673],[-8.651362,41.161697],[-8.651569,41.161730],[-8.651729,41.161754],[-8.652129,41.161814],[-8.652200,41.161824],[-8.652267,41.161842],[-8.652341,41.161861],[-8.652487,41.161900],[-8.652571,41.161922],[-8.652631,41.161931],[-8.652895,41.161977],[-8.653132,41.162018],[-8.653576,41.162064],[-8.653773,41.162098],[-8.653852,41.162111],[-8.654135,41.162160],[-8.654378,41.162202],[-8.654413,41.162208],[-8.654598,41.162240],[-8.654635,41.162246],[-8.654843,41.162285],[-8.654865,41.162286],[-8.655010,41.162311],[-8.655133,41.162332],[-8.655237,41.162350],[-8.655294,41.162360],[-8.655358,41.162371],[-8.655511,41.162396],[-8.655600,41.162350],[-8.655684,41.162307],[-8.655787,41.162253],[-8.656473,41.161900],[-8.656529,41.161850],[-8.656592,41.161811],[-8.656638,41.161780],[-8.657800,41.161177],[-8.658030,41.161050],[-8.658071,41.161027],[-8.658366,41.160906],[-8.658516,41.160848],[-8.658543,41.160837],[-8.658837,41.160724],[-8.659084,41.160626],[-8.659122,41.160612],[-8.659307,41.160542],[-8.659335,41.160531],[-8.659798,41.160348],[-8.659814,41.160342],[-8.659886,41.160311],[-8.660054,41.160246],[-8.660243,41.160171],[-8.660284,41.160155],[-8.660552,41.160049],[-8.660715,41.159987],[-8.660776,41.159962],[-8.661342,41.159741],[-8.661464,41.159692],[-8.661605,41.159635],[-8.662033,41.159469],[-8.662208,41.159401],[-8.662553,41.159264],[-8.662638,41.159229],[-8.662734,41.159193],[-8.663471,41.158902],[-8.663557,41.158871],[-8.663856,41.158753],[-8.664147,41.158638],[-8.664343,41.158561],[-8.664612,41.158457],[-8.664740,41.158404],[-8.664803,41.158380],[-8.664838,41.158366],[-8.664865,41.158356],[-8.665459,41.158124],[-8.665544,41.158091],[-8.665579,41.158077],[-8.667225,41.157429],[-8.667341,41.157383],[-8.667442,41.157345],[-8.668816,41.156804],[-8.668923,41.156763],[-8.669052,41.156713],[-8.669214,41.156648],[-8.669268,41.156626],[-8.669320,41.156606],[-8.670156,41.156277],[-8.670343,41.156204],[-8.670369,41.156194],[-8.670495,41.156145],[-8.670583,41.156110],[-8.670618,41.156097],[-8.671348,41.155810],[-8.671574,41.155719],[-8.671613,41.155703],[-8.671650,41.155688],[-8.671768,41.155642],[-8.672064,41.155527],[-8.672117,41.155506],[-8.672150,41.155494],[-8.672252,41.155454],[-8.672295,41.155489],[-8.672342,41.155521],[-8.672394,41.155548],[-8.672446,41.155568],[-8.672500,41.155585],[-8.672557,41.155597],[-8.672615,41.155605],[-8.672673,41.155608],[-8.672732,41.155606],[-8.672790,41.155600],[-8.672847,41.155589],[-8.672907,41.155572],[-8.672965,41.155549],[-8.673030,41.155515],[-8.673088,41.155475],[-8.673130,41.155437],[-8.673166,41.155395],[-8.673194,41.155350],[-8.673215,41.155303],[-8.673229,41.155254],[-8.673235,41.155206],[-8.673235,41.155162],[-8.673225,41.155109],[-8.673204,41.155050],[-8.673186,41.155013],[-8.673152,41.154968],[-8.673123,41.154935],[-8.673256,41.154854],[-8.673519,41.154704],[-8.673602,41.154621],[-8.673704,41.154557],[-8.673898,41.154445],[-8.674322,41.154214],[-8.674448,41.154138],[-8.674560,41.154074],[-8.674905,41.153874],[-8.674956,41.153844],[-8.675682,41.153424],[-8.676375,41.153017],[-8.676475,41.153114],[-8.677246,41.153856],[-8.677343,41.153950],[-8.677598,41.153925],[-8.677602,41.153831],[-8.677601,41.153807],[-8.677593,41.153417],[-8.677585,41.153112],[-8.677515,41.152976],[-8.677423,41.152896],[-8.677264,41.152750]]");
    //std::string test = get_exclude_polygons_geoJSON("[-8.65846,41.15493;-8.65699,41.14897;-8.64629,41.14919;-8.64819,41.15873;-8.65846,41.15493],[-8.62147,41.18535;-8.61873,41.17889;-8.60784,41.18138;-8.61069,41.18773;-8.62147,41.18535],[-8.62147,41.18535;-8.61873,41.17889;-8.60784,41.18138;-8.61069,41.18773;-8.62147,41.18535]");
    //std::cout << test << std::endl;
    //std::vector<std::tuple<std::string, std::string, std::string, int>> v = get_stops_from_trip("204", "0");
    //std::cout << get_coordinates_string_from_stops(v) << std::endl;


    crow::SimpleApp app;

    setup_routes(app);

    app.port(18080).multithreaded().run();

    return 0;
}
